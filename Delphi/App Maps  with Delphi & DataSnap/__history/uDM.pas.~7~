unit uDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.FMXUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Phys.SQLite, FireDAC.Phys.SQLiteDef,
  FireDAC.Stan.ExprFuncs, FireDAC.Comp.UI, System.IOUtils, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet;

type
  TDataModule1 = class(TDataModule)
    Connection: TFDConnection;
    FDPhysSQLiteDriverLink1: TFDPhysSQLiteDriverLink;
    FDGUIxWaitCursor1: TFDGUIxWaitCursor;
    QryCliente: TFDQuery;
    QryClienteNOME: TWideStringField;
    QryClienteEMAIL: TWideStringField;
    QryClientePASSWORD: TWideStringField;
    procedure ConnectionBeforeConnect(Sender: TObject);
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}

procedure TDataModule1.ConnectionBeforeConnect(Sender: TObject);
begin
  {$IF DEFINED(IOS)AND DEFINED(ANDROID)}
    Connection.Params.Values['DATABASE'] := TPath.GetDocumentsPath + PathDelim + 'banco.db3';
  {$ENDIF}
end;

procedure TDataModule1.DataModuleCreate(Sender: TObject);
begin
  with Connection do
  begin
    {$IFDEF IOS}
    Params.Values['DriverID'] := 'SQLite';
    try
      Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'banco.db3');
      Connected := true;
    except on E:Exception do
      raise Exception.Create('Erro de conexão com o banco de dados: ' + E.Message);
    end;
    {$ENDIF}

    {$IFDEF ANDROID}
    Params.Values['DriverID'] := 'SQLite';
    try
      Params.Values['Database'] := TPath.Combine(TPath.GetDocumentsPath, 'banco.db3');
      Connected := true;
    except on E:Exception do
      raise Exception.Create('Erro de conexão com o banco de dados: ' + E.Message);
    end;
    {$ENDIF}

  end;
end;

end.
